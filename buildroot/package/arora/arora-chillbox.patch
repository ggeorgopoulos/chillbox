diff -Naur arora-/src/browserapplication.cpp arora/src/browserapplication.cpp
--- arora-/src/browserapplication.cpp	2014-10-06 21:40:45.512430632 +0300
+++ arora/src/browserapplication.cpp	2014-10-08 11:08:24.190222082 +0300
@@ -164,6 +164,34 @@
     QTimer::singleShot(0, this, SLOT(postLaunch()));
 #endif
     languageManager();
+    
+     for (int i=1; i<argc; i++)
+     {
+         if (strcmp(argv[i], "-lang") == 0)
+         {
+             if (argc > i+1)
+             {
+                 char* defaultLang = argv[++i];
+                 if (s_languageManager)
+                     s_languageManager->setCurrentLanguage(strcmp(defaultLang, "en")!=0?QString::fromLocal8Bit(defaultLang):QString());
+             }
+         }
+     }
+    
+    // DBUS integration...
+    /*
+    if (QDBusConnection::sessionBus().isConnected()) {
+    	if (QDBusConnection::sessionBus().registerService(SERVICE_NAME)) {
+    	    QDBusConnection::sessionBus().registerObject("/", this, 
+    	    	    QDBusConnection::ExportAllSlots);
+    	} else {
+    	    fprintf(stderr, "%s\n", 
+    	    	    qPrintable(QDBusConnection::sessionBus().lastError().message()));	
+    	}
+    } else {
+        fprintf(stderr, "Cannot connect to the D-Bus session bus.\n");
+    }
+    */
 }
 
 BrowserApplication::~BrowserApplication()
@@ -555,7 +583,7 @@
     m_mainWindows.prepend(browser);
     connect(this, SIGNAL(privacyChanged(bool)),
             browser, SLOT(privacyChanged(bool)));
-    browser->show();
+    browser->showFullScreen();
     return browser;
 }
 
diff -Naur arora-/src/browserapplication.h arora/src/browserapplication.h
--- arora-/src/browserapplication.h	2014-09-24 10:26:36.912009158 +0300
+++ arora/src/browserapplication.h	2014-10-07 16:37:20.271446090 +0300
@@ -133,6 +133,8 @@
     static void setZoomTextOnly(bool textOnly);
 
     void askDesktopToOpenUrl(const QUrl &url);
+    
+    //Q_SCRIPTABLE QString onMessage(const QString &arg);
 
 private slots:
     void retranslate();
diff -Naur arora-/src/browsermainwindow.cpp arora/src/browsermainwindow.cpp
--- arora-/src/browsermainwindow.cpp	2014-10-06 21:41:53.804190909 +0300
+++ arora/src/browsermainwindow.cpp	2014-10-08 11:20:47.739586496 +0300
@@ -121,6 +121,7 @@
     , m_bookmarksToolbar(0)
     , m_tabWidget(new TabWidget(this))
     , m_autoSaver(new AutoSaver(this))
+    , m_statusBarVisible(false)
 {
     setAttribute(Qt::WA_DeleteOnClose, true);
     statusBar()->setSizeGripEnabled(true);
@@ -228,6 +229,8 @@
     setWindowRole(QLatin1String("browser"));
 #endif
     retranslate();
+    
+    //QTimer::singleShot(1000, this, SLOT(viewFullScreen(true)));
 }
 
 BrowserMainWindow::~BrowserMainWindow()
@@ -689,7 +692,6 @@
     m_viewFullScreenAction->setCheckable(true);
     m_viewMenu->addAction(m_viewFullScreenAction);
 
-
     m_viewMenu->addSeparator();
 
     m_viewSourceAction = new QAction(m_viewMenu);
@@ -1020,6 +1022,8 @@
     setUnifiedTitleAndToolBarOnMac(true);
     m_navigationBar = new QToolBar(this);
     m_navigationBar->setObjectName(QLatin1String("NavigationToolBar"));
+    // ggeorg
+    m_navigationBar->setHidden(true);
     addToolBar(m_navigationBar);
 
     m_historyBackAction->setIcon(style()->standardIcon(QStyle::SP_ArrowBack, 0, this));
@@ -1376,6 +1380,18 @@
     currentTab()->zoomOut();
 }
 
+void BrowserMainWindow::showFullScreen() {
+    show();
+    
+    setUnifiedTitleAndToolBarOnMac(false);
+    setWindowState(windowState() | Qt::WindowFullScreen);
+    
+    m_viewFullScreenAction->setChecked(true);
+
+    menuBar()->hide();
+    statusBar()->hide();
+}
+
 void BrowserMainWindow::viewFullScreen(bool makeFullScreen)
 {
     if (makeFullScreen) {
diff -Naur arora-/src/browsermainwindow.h arora/src/browsermainwindow.h
--- arora-/src/browsermainwindow.h	2014-09-24 10:26:36.912009158 +0300
+++ arora/src/browsermainwindow.h	2014-10-08 10:38:16.392633464 +0300
@@ -101,6 +101,8 @@
     bool restoreState(const QByteArray &state);
     QAction *showMenuBarAction() const;
     QAction *searchManagerAction() const { return m_toolsSearchManagerAction; }
+    
+    void showFullScreen();
 
 public slots:
     void goHome();
diff -Naur arora-/src/htmls/startpage.css arora/src/htmls/startpage.css
--- arora-/src/htmls/startpage.css	2014-09-24 10:26:36.916009158 +0300
+++ arora/src/htmls/startpage.css	2014-10-08 09:55:25.825751293 +0300
@@ -1,74 +1,43 @@
-* {
-    margin: 0;
-    padding: 0;
-    font-family: "DejaVu Sans";
+html, body {
+  height: 100%;
+  margin: 0;
+  padding: 0;
 }
 
 body {
-    background: -webkit-gradient(linear, left top, left bottom, from(#ccc), to(#fff), color-stop(0.5, #fff));
-    background-repeat: repeat-x;
-    margin-top: 100px;
+  background: #7F8C8D;
 }
 
-#header, #search, #footer {
-    width: 500px;
-    margin: 10px auto;
+.spinner {
+  width: 40px;
+  height: 40px;
+  margin: auto;
+  background-color: #333;
+
+  position: absolute;
+  top :0; left: 0; right: 0; bottom: 0;
+
+  border-radius: 100%;  
+  -webkit-animation: scaleout 1.0s infinite ease-in-out;
+  animation: scaleout 1.0s infinite ease-in-out;
+}
+
+@-webkit-keyframes scaleout {
+  0% { -webkit-transform: scale(0.0) }
+  100% {
+    -webkit-transform: scale(1.0);
+    opacity: 0;
+  }
+}
+
+@keyframes scaleout {
+  0% { 
+    transform: scale(0.0);
+    -webkit-transform: scale(0.0);
+  } 100% {
+    transform: scale(1.0);
+    -webkit-transform: scale(1.0);
+    opacity: 0;
+  }
 }
 
-#header, #search {
-    -webkit-border-radius: 0.8em;
-    padding: 25px;
-}
-
-#header {
-    background: -webkit-gradient(linear, left top, left bottom, from(#228), to(#668), color-stop(0.9, #66a));
-    height: 20px;
-}
-
-#header h1 {
-    display: inline;
-    font-size: 1.7em;
-    color: #fff;
-    font-weight: bold;
-}
-
-#header img {
-    display: inline;
-    float: right;
-    height: 150px;
-    margin-top: -80px;
-}
-
-#search {
-    background: -webkit-gradient(linear, left top, right top, from(#cdf), to(#cdf), color-stop(0.5, #eff));
-    height: 50px;
-    color: #000;
-    text-align: center;
-    padding-top: 40px !important;
-}
-
-#search fieldset {
-    border: 0;
-}
-
-#search input[type=text] {
-    width: 65%;
-}
-
-#search input[type=submit] {
-    width: 25%;
-}
-
-#footer {
-    text-align: center;
-    color: #999;
-}
-
-#footer a {
-    color: #555;
-    text-decoration: none;
-}
-
-#footer a:hover {
-    text-decoration: underline;
-}
diff -Naur arora-/src/htmls/startpage.html arora/src/htmls/startpage.html
--- arora-/src/htmls/startpage.html	2014-09-24 10:26:36.916009158 +0300
+++ arora/src/htmls/startpage.html	2014-10-08 09:52:18.878414530 +0300
@@ -7,56 +7,40 @@
     <link rel="stylesheet" href="qrc:/startpage.css" type="text/css" />
     <script type="text/javascript">
         //<![CDATA[
-        function update()
-        {
-            var searchEngine = window.arora.currentEngine;
+	const dtalksrv = 'ws://localhost:8840/dtalksrv'
+	    , url = 'http://localhost:8840/';
 
-            document.title = window.arora.translate('Welcome to Arora!');
-            document.getElementById('headerTitle').innerHTML = window.arora.translate('Arora Start');
-            document.getElementById('searchButton').value = window.arora.translate('Search!');
-            document.getElementById('footer').innerHTML = window.arora.translate('Search results provided by') + ' '
-                                                          + searchEngine.name + ' | ' + '<a href="http://arora-browser.org/">'
-                                                          + window.arora.translate('About Arora') + '</a>';
-            document.getElementById('lineEdit').placeholder = searchEngine.name;
+	setup(new WebSocket(dtalksrv));
 
-            // Try to change the direction of the page:
-            //   This string is defined in QApplication
-            //   src/gui/kernel/qapplication.cpp#qt_detectRTLLanguage()
-            //   it should contain LTR or RTL
-
-            var newDir = window.arora.translate('QT_LAYOUT_DIRECTION');
-            newDir = newDir.toLowerCase();
-            if ((newDir != 'ltr') && (newDir != 'rtl'))
-                newDir = 'ltr';
-            document.getElementsByTagName('body')[0].setAttribute('dir', newDir);
-        }
-
-        function formSubmitted()
-        {
-            var string = lineEdit.value;
-
-            if (string.length == 0)
-                return;
-
-            var url = window.arora.searchUrl(string);
-            window.location.href = url;
-        }
+	function setup(ws) {
+		ws.onopen = function() {
+			location.replace(url);
+		};
+		ws.onclose = function() {
+			reconnect();
+		}
+		ws.onerror = function() {
+			reconnect();
+		}
+	}
+
+	var timeoutH;
+	function reconnect() {
+		//alert('>>> reconnect');
+
+		if (timeoutH) {
+			clearTimeout(timeoutH);
+			delete timeoutH;
+		}
+
+		timeoutH = setTimeout(function() {
+			setup(new WebSocket(dtalksrv));
+		}, 3333);
+	}
         //]]>
     </script>
 </head>
-<body onload="document.forms[0].lineEdit.select(); update();">
-    <div id="header">
-        <h1 id="headerTitle"></h1>
-        <img src="qrc:/arora.svg" alt="Arora"/>
-    </div>
-    <div id="search">
-        <form action="javascript:formSubmitted();">
-            <fieldset>
-                <input id="lineEdit" name="lineEdit" type="text" />
-                <input id="searchButton" type="submit" />
-            </fieldset>
-        </form>
-    </div>
-    <div id="footer"></div>
+<body>
+    <div class="spinner"></div>
 </body>
 </html>
diff -Naur arora-/src/tabbar.cpp arora/src/tabbar.cpp
--- arora-/src/tabbar.cpp	2014-09-24 10:26:36.936009158 +0300
+++ arora/src/tabbar.cpp	2014-10-06 23:14:34.687323133 +0300
@@ -88,7 +88,7 @@
 TabBar::TabBar(QWidget *parent)
     : QTabBar(parent)
     , m_viewTabBarAction(0)
-    , m_showTabBarWhenOneTab(true)
+    , m_showTabBarWhenOneTab(false)
 {
     setContextMenuPolicy(Qt::CustomContextMenu);
     setAcceptDrops(true);
diff -Naur arora-/src/utils/languagemanager.cpp arora/src/utils/languagemanager.cpp
--- arora-/src/utils/languagemanager.cpp	2014-09-24 10:26:36.936009158 +0300
+++ arora/src/utils/languagemanager.cpp	2014-10-08 11:11:23.389586964 +0300
@@ -125,7 +125,8 @@
     foreach (const QString &language, m_languages) {
         QString country = QLocale(language).name().split(QLatin1Char('_')).value(0);
         if (country == fallback)
-            return country;
+            // (ggeorg) return country;
+            return language;
     }
 
     return QString();
@@ -246,7 +247,8 @@
 
     QStringList items;
     int defaultItem = -1;
-    QString current = currentLanguage();
+    // (ggeorg) QString current = currentLanguage();
+    QString current = convertStringToLanguageFile(currentLanguage());
     foreach (const QString &name, m_languages) {
         QLocale locale(name);
         QString string = QString(QLatin1String("%1, %2 (%3) %4"))
